#equal/2

fact(equal(X,Y)) \ dom(X,DX) <=> integer(Y), member(Y,DX), length(DX,L), L =\= 1 | dom(X,[Y]).

fact(equal(X,Y)) \ dom(X,DX), dom(Y,DY) <=> intersection(DX,DY,ND), length(DX,LX), LX =\= 1, length(DY,LY), LY =\= 1 | dom(X,ND), dom(Y,ND).
fact(equal(X,Y)), dom(X,[DX]), dom(Y,[DY]) <=> DX =\= DY | fail.
fact(equal(X,Y)) \ dom(X,[DX]) <=> integer(Y), Y =\= DX | fail.
fact(equal(X,Y)) \ dom(Y,[DY]) <=> integer(X), DY =\= X | fail.

dom(X,[DX]), dom(Y,[DY]), bodyC(R,equal(X,Y)) ==>  DX =:= DY | verified_constraint(R,equal(X,Y)).
dom(X,[DX]), dom(Y,[DY]), bodyC(R,equal(X,Y)) ==>  DX =\= DY | unsat_constraint(R,equal(X,Y)).

dom(X,[DX]), bodyC(R,equal(X,Y)) ==> integer(Y), DX =:= Y | verified_constraint(R,equal(X,Y)).
dom(X,[DX]), bodyC(R,equal(X,Y)) ==> integer(Y), DX =\= Y | unsat_constraint(R,equal(X,Y)).

dom(Y,[DY]), bodyC(R,equal(X,Y)) ==> integer(X), DY =:= Y | verified_constraint(R,equal(X,Y)).
dom(Y,[DY]), bodyC(R,equal(X,Y)) ==> integer(X), DY =\= Y | unsat_constraint(R,equal(X,Y)).
